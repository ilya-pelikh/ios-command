const createExploit = (request, count) => {
    return `
    function setNativeValue(element, value) {
      let lastValue = element.value;
      element.value = value;
      let event = new Event("input", { target: element, bubbles: true });
      event.simulated = true;
      let tracker = element._valueTracker;
      if (tracker) {
          tracker.setValue(lastValue);
      }
      element.dispatchEvent(event);
    } 

    function load () {
      const textarea = document.querySelector('#chat-input')

      return new Promise(res => {
        var input = document.getElementById('chat-input');
        
        setNativeValue(input, "${request}");
        
        const inputIcon = document.querySelector('div[aria-disabled="false"]')
        inputIcon.click()

        let retryCount = 0 
        const interval = setInterval(() => {
            const node = document.querySelector('div[role=button]>div>.ds-icon>svg')
              retryCount++
            if (node) {
              clearInterval(interval)
              const aswerNodes = Array.from(document.querySelectorAll('.ds-markdown'));
              const position = ${count} ||  aswerNodes.length - 1;
              const result = aswerNodes[position].innerText.replaceAll('\\n', ' ')
              res(result)
            } else {
                if (retryCount > 30) res('Ошибка в получении данных. Попробуйте снова')
            }
        }, 2000)

      })
    }

    load()
    `
}

module.exports = {
    createExploit
}

